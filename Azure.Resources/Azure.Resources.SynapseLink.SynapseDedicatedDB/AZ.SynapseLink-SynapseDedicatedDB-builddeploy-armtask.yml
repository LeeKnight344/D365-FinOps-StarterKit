trigger:
  branches:
    include:
      - main
      - Development
      - release/*
  paths:
    include:
      - 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.bicep'



pool:
  #name: #PoolName
  vmImage: windows-latest #Use this for Azure Hosted Agents

variables:
  Devops_Service_Connection_Name: 'Sandbox - PAYG'
  Devops_Service_Principal: 'ee797751-c283-4f26-a4e4-87a0116197cb'
  Primary_EntraID_Admin_Email: 'leek@the-sandbox.co.uk'  #Variable for UPN of Entra ID Admin
  Primary_EntraID_Admin_SID: 'eb5001b9-8346-476a-b26a-77952ce01f70'
  Azure_Subscription_Id: '262069d1-4249-43a7-acc3-55714500fc42' #Variable for Azure Subscription ID
  Azure_Tenant_Id: '3dccfdf8-200b-47e3-afff-4a495b603cc2'
  Azure_Resource_Location: 'ukwest'
  Azure_Resource_Location_Formatted: 'UK West'


stages:
- stage: SLFDAzureResourceDeploymentDev
  displayName: 'SLFDAzureResourceDeploymentDev'
  condition: eq(variables['Build.SourceBranchName'], 'Development')
  variables:
    - group: SLFD - Secure Development Variables
  jobs:
  - deployment: 'SLFDAzureResourceDeploymentDev'
    displayName: 'SLFD Environment Dev'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureResourceManagerTemplateDeployment@3
              inputs:
                deploymentScope: 'Resource Group'
                azureResourceManagerConnection: "$(Devops_Service_Connection_Name)"
                subscriptionId: $(Azure_Subscription_Id)
                action: 'Create Or Update Resource Group'
                resourceGroupName: 'slfd-dev-rg-01'
                location: "$(Azure_Resource_Location_Formatted)"
                templateLocation: 'Linked artifact'
                csmFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.bicep'
                csmParametersFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.Parameters.json'
                overrideParameters: >
                  -AZ_Subscription_id $(Azure_Subscription_Id)
                  -AZ_ResourceGroup_Name slfd-dev-rg-01
                  -AZ_Resource_Location $(Azure_Resource_Location)
                  -AZ_Resource_Location_Formatted "$(Azure_Resource_Location_Formatted)"
                  -AZ_SynapseWorkspace_Name slfd-dev-sw-01
                  -AZ_SynapseWorkspace_Linked_StorageAccount_defaultfilesystem slfdsaplaceholder
                  -AZ_SynapseWorkspace_SQL_Local_Username $(AZ_SynapseWorkspace_SQL_Local_Username)
                  -AZ_SynapseWorkspace_Managed_ResourceGroupName slfd-dev-mrg-01
                  -AZ_SynapseWorkspace_EntraID_Admin_ObjectID $(Primary_EntraID_Admin_SID)
                  -AZ_SparkPool_SynapseWorkspace_Name slfddevaps
                  -AZ_SparkPool_AutoScale true
                  -AZ_SparkPool_IsolatedCompute false
                  -AZ_SparkPool_MinNodeCount 5
                  -AZ_SparkPool_MaxNodeCount 10
                  -AZ_SparkPool_NodeCount 0
                  -AZ_SparkPool_NodeSizeFamily MemoryOptimized
                  -AZ_SparkPool_NodeSize small
                  -AZ_SparkPool_AutoPause true
                  -AZ_SparkPool_AutoPauseDelay 5
                  -AZ_SparkPool_Version 3.3
                  -AZ_SparkPool_ConfigFile_Name 
                  -AZ_SparkPool_ConfigFile_PropertiesContent 
                  -AZ_SparkPool_SessionLevelPackages true
                  -AZ_SparkPool_DynamicExecutorAllocation false
                  -AZ_SparkPool_MinExecutorCount 0
                  -AZ_SparkPool_MaxExecutorCount 0
                  -AZ_SparkPool_CacheSize 50
                  -AZ_StorageAccount_Name slfddevsa01
                  -AZ_SynapseWorkspace_SQL_Local_Password $(AZ_SynapseWorkspace_SQL_Local_Password)
                  -AZ_SynapseWorkspace_DedicatedSQL_Name slfddedicateddb
                  -AZ_SynapseWorkspace_DecicatedSQL_Pool_SKU DW100c
                  -AZ_SynapseWorkspace_DecicatedSQL_Pool_Capacity 0
                  -AZ_SynapseWorkspace_DecicatedSQL_MaxSize 263882790666240
                  -AZ_KeyVault_Name slfd-dev-kv-01
                  -AZ_KeyVault_Sku Standard
                  -AZ_KeyVault_Family A
                  -AZ_KeyVault_TenantId $(Azure_Tenant_Id)
                  -AZ_KeyVault_EnabledForDeployment true
                  -AZ_KeyVault_EnabledForTemplateDeployment true
                  -AZ_KeyVault_EnabledForDiskEncryption false
                  -AZ_KeyVault_EnabledForRBACAuthorization false
                  -AZ_KeyVault_Public_Network_Access Enabled
                  -AZ_KeyVault_SoftDelete_Enabled true
                  -AZ_KeyVault_SoftDelete_RetentionDays 60

                deploymentMode: 'Incremental'
              displayName: 'Deploy Azure Synapse resources using ARM Template'

            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Service Principal'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-dev-sw-01 --query "[?principalId=='$(Devops_Service_Principal)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-dev-sw-01 --role "Synapse Administrator" --assignee $(Devops_Service_Principal)
                  } else {
                    Write-Host "Role assignment for Service Principal already exists. Skipping."
                  }

            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Primary EntraID Admin'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-dev-sw-01 --query "[?principalId=='$(Primary_EntraID_Admin_SID)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-dev-sw-01 --role "Synapse Administrator" --assignee $(Primary_EntraID_Admin_SID)
                  } else {
                    Write-Host "Role assignment for Primary EntraID Admin already exists. Skipping."
                  }




- stage: SLFDAzureResourceDeploymentUAT
  displayName: 'SLFDAzureResourceDeploymentUAT'
  condition: eq(variables['Build.SourceBranchName'], 'main')
  variables:
    - group: SLFD - Secure UAT Variables
  jobs:
  - deployment: 'SLFDAzureResourceDeploymentUAT'
    displayName: 'SLFD Environment UAT'
    environment: UAT
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureResourceManagerTemplateDeployment@3
              inputs:
                deploymentScope: 'Resource Group'
                azureResourceManagerConnection: "$(Devops_Service_Connection_Name)"
                subscriptionId: $(Azure_Subscription_Id)
                action: 'Create Or Update Resource Group'
                resourceGroupName: 'slfd-uat-rg-01'
                location: "$(Azure_Resource_Location_Formatted)"
                templateLocation: 'Linked artifact'
                csmFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.bicep'
                csmParametersFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.Parameters.json'
                overrideParameters: >
                    -AZ_Subscription_id $(Azure_Subscription_Id)
                    -AZ_ResourceGroup_Name slfd-uat-rg-01 
                    -AZ_Resource_Location $(Azure_Resource_Location) 
                    -AZ_Resource_Location_Formatted "$(Azure_Resource_Location_Formatted)"
                    -AZ_SynapseWorkspace_Name slfd-uat-sw-01
                    -AZ_SynapseWorkspace_Linked_StorageAccount_defaultfilesystem slfdsaplaceholder
                    -AZ_SynapseWorkspace_SQL_Local_Username slfduatsqladmin
                    -AZ_SynapseWorkspace_Managed_ResourceGroupName slfd-uat-mrg-01
                    -AZ_SynapseWorkspace_EntraID_Admin_ObjectID $(Primary_EntraID_Admin_SID)
                    -AZ_SparkPool_SynapseWorkspace_Name slfduataps
                    -AZ_SparkPool_AutoScale true
                    -AZ_SparkPool_IsolatedCompute false
                    -AZ_SparkPool_MinNodeCount 5
                    -AZ_SparkPool_MaxNodeCount 10
                    -AZ_SparkPool_NodeCount 0
                    -AZ_SparkPool_NodeSizeFamily MemoryOptimized
                    -AZ_SparkPool_NodeSize small
                    -AZ_SparkPool_AutoPause true
                    -AZ_SparkPool_AutoPauseDelay 5
                    -AZ_SparkPool_Version 3.3
                    -AZ_SparkPool_ConfigFile_Name 
                    -AZ_SparkPool_ConfigFile_PropertiesContent 
                    -AZ_SparkPool_SessionLevelPackages true
                    -AZ_SparkPool_DynamicExecutorAllocation false
                    -AZ_SparkPool_MinExecutorCount 0
                    -AZ_SparkPool_MaxExecutorCount 0
                    -AZ_SparkPool_CacheSize 50
                    -AZ_StorageAccount_Name slfduatsa01
                    -AZ_SynapseWorkspace_SQL_Local_Password $(AZ_SynapseWorkspace_SQL_Local_Password)
                    -AZ_SynapseWorkspace_DedicatedSQL_Name slfddedicateddb
                    -AZ_SynapseWorkspace_DecicatedSQL_Pool_SKU DW100c
                    -AZ_SynapseWorkspace_DecicatedSQL_Pool_Capacity 0
                    -AZ_SynapseWorkspace_DecicatedSQL_MaxSize 263882790666240
                    -AZ_KeyVault_Name slfd-uat-kv-01
                    -AZ_KeyVault_Sku Standard
                    -AZ_KeyVault_Family A
                    -AZ_KeyVault_TenantId $(Azure_Tenant_Id)
                    -AZ_KeyVault_EnabledForDeployment true
                    -AZ_KeyVault_EnabledForTemplateDeployment true
                    -AZ_KeyVault_EnabledForDiskEncryption false
                    -AZ_KeyVault_EnabledForRBACAuthorization false
                    -AZ_KeyVault_Public_Network_Access Enabled
                    -AZ_KeyVault_SoftDelete_Enabled true
                    -AZ_KeyVault_SoftDelete_RetentionDays 60
  
                deploymentMode: 'Incremental'



            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Service Principal'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-uat-sw-01 --query "[?principalId=='$(Devops_Service_Principal)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-uat-sw-01 --role "Synapse Administrator" --assignee $(Devops_Service_Principal)
                  } else {
                    Write-Host "Role assignment for Service Principal already exists. Skipping."
                  }

            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Primary EntraID Admin'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-uat-sw-01 --query "[?principalId=='$(Primary_EntraID_Admin_SID)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-uat-sw-01 --role "Synapse Administrator" --assignee $(Primary_EntraID_Admin_SID)
                  } else {
                    Write-Host "Role assignment for Primary EntraID Admin already exists. Skipping."
                  }

- stage: SLFDAzureResourceDeploymentProduction
  displayName: 'SLFDAzureResourceDeploymentProduction'
  condition: contains(variables['Build.SourceBranch'], 'release')
  variables:
    - group: SLFD - Secure Production Variables
  jobs:
  - deployment: 'SLFDAzureResourceDeploymentprod'
    displayName: 'SLFD Environment Production'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureResourceManagerTemplateDeployment@3
              inputs:
                deploymentScope: 'Resource Group'
                azureResourceManagerConnection: "$(Devops_Service_Connection_Name)"
                subscriptionId: $(Azure_Subscription_Id)
                action: 'Create Or Update Resource Group'
                resourceGroupName: 'slfd-prod-rg-01'
                location: "$(Azure_Resource_Location_Formatted)"
                templateLocation: 'Linked artifact'
                csmFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.bicep'
                csmParametersFile: 'Azure.Resources/Azure.Resources.SynapseLink.SynapseDedicatedDB/AZ.SynapseLink-SynapseDedicatedDB.Parameters.json'
                overrideParameters: >
                    -AZ_Subscription_id $(Azure_Subscription_Id)
                    -AZ_ResourceGroup_Name slfd-prod-rg-01 
                    -AZ_Resource_Location $(Azure_Resource_Location) 
                    -AZ_Resource_Location_Formatted "$(Azure_Resource_Location_Formatted)"
                    -AZ_SynapseWorkspace_Name slfd-prod-sw-01
                    -AZ_SynapseWorkspace_Linked_StorageAccount_defaultfilesystem slfdsaplaceholder
                    -AZ_SynapseWorkspace_SQL_Local_Username slfdprodsqladmin
                    -AZ_SynapseWorkspace_Managed_ResourceGroupName slfd-prod-mrg-01
                    -AZ_SynapseWorkspace_EntraID_Admin_ObjectID $(Primary_EntraID_Admin_SID)
                    -AZ_SparkPool_SynapseWorkspace_Name slfdprodaps
                    -AZ_SparkPool_AutoScale true
                    -AZ_SparkPool_IsolatedCompute false
                    -AZ_SparkPool_MinNodeCount 5
                    -AZ_SparkPool_MaxNodeCount 10
                    -AZ_SparkPool_NodeCount 0
                    -AZ_SparkPool_NodeSizeFamily MemoryOptimized
                    -AZ_SparkPool_NodeSize small
                    -AZ_SparkPool_AutoPause true
                    -AZ_SparkPool_AutoPauseDelay 5
                    -AZ_SparkPool_Version 3.3
                    -AZ_SparkPool_ConfigFile_Name 
                    -AZ_SparkPool_ConfigFile_PropertiesContent 
                    -AZ_SparkPool_SessionLevelPackages true
                    -AZ_SparkPool_DynamicExecutorAllocation false
                    -AZ_SparkPool_MinExecutorCount 0
                    -AZ_SparkPool_MaxExecutorCount 0
                    -AZ_SparkPool_CacheSize 50
                    -AZ_StorageAccount_Name slfdprodsa01
                    -AZ_SynapseWorkspace_SQL_Local_Password $(AZ_SynapseWorkspace_SQL_Local_Password)
                    -AZ_SynapseWorkspace_DedicatedSQL_Name slfddedicateddb
                    -AZ_SynapseWorkspace_DecicatedSQL_Pool_SKU DW100c
                    -AZ_SynapseWorkspace_DecicatedSQL_Pool_Capacity 0
                    -AZ_SynapseWorkspace_DecicatedSQL_MaxSize 263882790666240
                    -AZ_KeyVault_Name slfd-prod-kv-01
                    -AZ_KeyVault_Sku Standard
                    -AZ_KeyVault_Family A
                    -AZ_KeyVault_TenantId $(Azure_Tenant_Id)
                    -AZ_KeyVault_EnabledForDeployment true
                    -AZ_KeyVault_EnabledForTemplateDeployment true
                    -AZ_KeyVault_EnabledForDiskEncryption false
                    -AZ_KeyVault_EnabledForRBACAuthorization false
                    -AZ_KeyVault_Public_Network_Access Enabled
                    -AZ_KeyVault_SoftDelete_Enabled true
                    -AZ_KeyVault_SoftDelete_RetentionDays 60
  
                deploymentMode: 'Incremental'


            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Service Principal'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-prod-sw-01 --query "[?principalId=='$(Devops_Service_Principal)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-prod-sw-01 --role "Synapse Administrator" --assignee $(Devops_Service_Principal)
                  } else {
                    Write-Host "Role assignment for Service Principal already exists. Skipping."
                  }

            - task: AzureCLI@2
              displayName: 'Assign Synapse Administrator role to Primary EntraID Admin'
              inputs:
                azureSubscription: "$(Devops_Service_Connection_Name)"
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  $roleAssignment = az synapse role assignment list --workspace-name slfd-prod-sw-01 --query "[?principalId=='$(Primary_EntraID_Admin_SID)' && roleDefinitionName=='Synapse Administrator']"
                  if (-not $roleAssignment) {
                    az synapse role assignment create --workspace-name slfd-prod-sw-01 --role "Synapse Administrator" --assignee $(Primary_EntraID_Admin_SID)
                  } else {
                    Write-Host "Role assignment for Primary EntraID Admin already exists. Skipping."
                  }